name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Cancel in-progress runs for the same PR
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Lint
      run: npm run lint
    
    - name: Build
      run: npm run build
    
    - name: Check TypeScript compilation
      run: tsc --noEmit
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-${{ matrix.node-version }}
        path: dist/
        retention-days: 7
        
  kb-validation:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        node-version: [20.x]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Validate Knowledge Base
      id: kb_validation
      run: |
        mkdir -p validation-results
        if npm run validate > validation-results/kb-validation.log 2>&1; then
          echo "validation_status=success" >> $GITHUB_OUTPUT
          cat > validation-results/kb-report.md << EOF
        ## 💯 Knowledge Base Validation Passed
        
        All knowledge base checks have passed successfully! 
        
        ### Summary
        - The knowledge base structure is valid
        - All required fields are present
        - No duplicate IDs detected
        
        _You can run this validation locally with \`npm run validate\`_
        
        🤖 Generated by [CI $GITHUB_WORKFLOW run #$GITHUB_RUN_ID](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)
        EOF
        else
          echo "validation_status=failure" >> $GITHUB_OUTPUT
          
          # Extract the validation report from the output
          sed -n '/--- Validation Report ---/,/Validation complete./p' validation-results/kb-validation.log > validation-results/report-section.txt
          
          # Extract errors and warnings
          grep "ERROR:" validation-results/kb-validation.log > validation-results/errors.txt || true
          grep "WARN:" validation-results/kb-validation.log > validation-results/warnings.txt || true
          
          # Create the markdown report
          cat > validation-results/kb-report.md << EOF
        ## ❌ Knowledge Base Validation Failed
        
        The knowledge base validation has failed. Please review and fix the issues below.
        
        ### Summary
        \`\`\`
        $(cat validation-results/report-section.txt)
        \`\`\`
        
        ### Errors
        \`\`\`
        $(cat validation-results/errors.txt || echo "No critical errors found!")
        \`\`\`
        
        ### Warnings
        \`\`\`
        $(cat validation-results/warnings.txt || echo "No warnings found!")
        \`\`\`
        
        _You can run this validation locally with \`npm run validate\`_
        
        🤖 Generated by [CI $GITHUB_WORKFLOW run #$GITHUB_RUN_ID](https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID)
        EOF
        fi
    
    - name: Post Knowledge Base Validation Report
      if: github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        header: kb-validation-report
        path: validation-results/kb-report.md

  # Test macOS specific functionality (optional, as actual execution requires macOS)
  # Uncomment this section if you want to set up a macOS runner for execution tests
  # macos-test:
  #   runs-on: macos-latest
  #   needs: build
  #   steps:
  #   - uses: actions/checkout@v4
  #   
  #   - name: Use Node.js
  #     uses: actions/setup-node@v4
  #     with:
  #       node-version: '20.x'
  #       cache: 'npm'
  #   
  #   - name: Install dependencies
  #     run: npm ci
  #   
  #   - name: Build
  #     run: npm run build
  #   
  #   - name: Run basic startup test 
  #     run: |
  #       npm start -- --test-mode &
  #       PID=$!
  #       sleep 5
  #       kill $PID